@model SCM.Customer

@{
    ViewBag.Title = "Edit";
}

<h2>@AppViews.Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>@AppViews.Customer</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsBlackListed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsBlackListed, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsBlackListed, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CityId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @HtmlExtensions.MyDropDown("CityId", ViewBag.CityId, Model.CityId)
                @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RegionId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @HtmlExtensions.MyDropDown("RegionId", ViewBag.RegionId, Model.RegionId)
                @Html.ValidationMessageFor(model => model.RegionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-4">
                <input type="submit" value="@AppViews.Save" class="btn btn-primary" />
                &nbsp;|&nbsp;
                <a id="btnTags" class="btn btn-primary" href="#" >@AppViews.CustomerTags</a>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink(AppViews.BackToList, "Index", null, htmlAttributes: new { @class = "btn btn-default" })
</div>

<div class="modal fade" id="tagsModal" tabindex="-1" role="dialog" aria-labelledby="tagsModal-label" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="tagsModal-label">@AppViews.CustomerTags</h4>
            </div>
            <div class="modal-body">
                <div id="tags">
                    
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">@AppViews.Close</button>
                <button id="btnSaveTags" type="button" class="btn btn-primary">@AppViews.Save</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script>
    $(function () {

        $("#btnTags").click(function (e) {

            var url = '/Customers/CustomerTags?customerId=@Model.Id';
            $("#tags").empty();

            $("#tagsModal").modal("toggle");


            $.ajax({
                method: 'GET',
                url: url,

                error: function (xhr, status, error) {
                    var err = eval("(" + xhr.responseText + ")");
                    alert(err.Message);
                },
                success: function (result) {
                    $("#tags").html(result);
                }
            });

        });

        $("#btnSaveTags").click(function (e) {

            var url = '/Customers/CustomerTags?customerId=@Model.Id';
           

            var selectedTags = '';
            $(".tag").each(function (index, elem) {
                if (elem.checked) {
                    selectedTags = selectedTags + $(this).data("id") + ',';
                }
            });
            if (selectedTags != null) {
                selectedTags = selectedTags.substr(0, selectedTags.length - 1);
            }
            url = url + '&tags=' + selectedTags;

            $.ajax({
                method: 'POST',
                url: url,

                error: function (xhr, status, error) {
                    var err = eval("(" + xhr.responseText + ")");
                    alert(err.Message);
                },
                success: function (result) {
                    $("#tagsModal").modal("toggle");
                }
            });

        });

            $("#CityId").focusin(function () {
                $(this).data('val', $(this).val());
            });

            $("#CityId").change(function (e) {
                debugger;
                var id = $("#CityId").val();
                var url = '@Url.Action("GetRegions")';

                var msg = '@AppViews.CityChangeMsg';

                if (!confirm(msg)) {
                    $("#CityId").val($("#CityId").data('val'));
                    return;
                }

                $("#RegionId").empty();


                $.ajax({
                    contentType: 'application/json',
                    method: 'GET',
                    url: url,
                    data: { cityId: id },
                    success: function (result) {
                        if (result != null && result.length > 0) {

                            var html = '<option selected="true" value=""></option>';
                            for (var i = 0; i < result.length; i++) {
                                var str = '<option value="' + result[i].Id + '">' + result[i].Name + '</option>';
                                html = html + str;
                            }
                            $("#RegionId").html(html);
                        }
                    }
                });
            });

        });

</script>
}
