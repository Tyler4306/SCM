@model SCM.ServiceRequest

@{
    ViewBag.Title = "Create";
}

<h2>@AppViews.Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@AppViews.ServiceRequest</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.CustomerId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="form-inline">
                    @Html.HiddenFor(x => x.CustomerId, new { htmlAttributes = new { @class = "form-control" } })
                    @if (Model != null && Model.Customer != null)
                    {
                        <input type="text" id="Customer_Name" value="@Model.Customer.Name" readonly class="form-control" />
                    }
                    else
                    {
                        <input type="text" id="Customer_Name" value="" class="form-control" readonly />
                    }
                    <span>
                        <a class="btn btn-default" id="btnFind" href="#"><span class="glyphicon glyphicon-search"></span></a>
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RequestDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.RequestDate, new { htmlAttributes = new { @class = "form-control" } })*@
                <input type="date" id="RequestDate" name="RequestDate" class="form-control" value='@Model.RequestDate.ToString("yyyy-MM-dd")' pattern="dd/mm/yyyy" />
                @Html.ValidationMessageFor(model => model.RequestDate, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.ProductId, AppViews.Product, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("ProductId", null, htmlAttributes: new { @class = "form-control" })*@
                @HtmlExtensions.MyDropDownStr("ProductId", ViewBag.ProductId, null)
                @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentId, AppViews.Department, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DepartmentId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EngineerId, AppViews.Engineer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("EngineerId", null, htmlAttributes: new { @class = "form-control" })*@
                @HtmlExtensions.MyDropDown("EngineerId", ViewBag.EngineerId, null )
                @Html.ValidationMessageFor(model => model.EngineerId, "", new { @class = "text-danger" })
            </div>
        </div>
        

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control", rows="5" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Remarks, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
            </div>
        </div>

       

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@AppViews.Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink(AppViews.BackToList, "Index", null, htmlAttributes: new { @class = "btn btn-default" })
</div>

<div class="modal fade" id="findCustomer" tabindex="-1" role="dialog" aria-labelledby="findCustomer-label"
     aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="findCustomer-label">@AppViews.Customers</h4>
            </div>
            <div class="modal-body">
                <div id="findCustomerForm"></div>
                @*<div id="loader_with_image" class="text-center">
                    <img src="~/Content/ajax-loader.gif" />
                </div>*@
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">@AppViews.Close</button>
                <a class="btn btn-primary save" href='#'>@AppViews.Save</a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script>

        // FOR AJAX PAgedList MVC
        function callCustomers(page) {
            var listId = '#findCustomerForm';
            var url = '/Customers/FindCustomer?page=' + page + '&search=' + $("#txtSearch").val();

            $.ajax(
            {
                type: 'GET',
                url: url,
                success: function (result) {

                    $(listId).html(result);
                    updateCustomerClicks();
                }
            }
            );
        }

        function updateCustomerClicks() {
            $("tr.cname td a").click(function (e) {
                var id = $(this).data("id");

                $("#SelectedCustomer").val(id);
                $("tr.cname").removeClass("active");
                $(this.parentElement.parentElement).addClass("active");
            });
        }

        $(function () {
            if ($("#CustomerId").val() === "0")
                $("#CustomerId").val('');

            // Validator
            $.validator = $("form").validate({
                rules: {
                    RequestDate: { required: true, date: true }
                }
            });

            // FOR MODAL FIND

                $("#btnFind").click(function (e) {
                    e.preventDefault();


                    var url = '/Customers/FindCustomer';

                    $("#findCustomer").modal("toggle");


                    $.ajax({
                        method: 'GET',
                        url: url,
                        
                        error: function (xhr, status, error) {
                            var err = eval("(" + xhr.responseText + ")");
                            alert(err.Message);
                        },
                        success: function (result) {
                            $("#findCustomerForm").html(result);
                            updateCustomerClicks();
                            
                        }
                    });

                });

                $('#findCustomer').on('show.bs.modal', function (e) {
                });

                $(".save").click(function (e) {
                    var id = $("#SelectedCustomer").val();
                    var url = '@Url.Action("GetCustomer", "Customers")';

                    $.ajax({
                        url: url,
                        data: { id: id },
                        dataType: "json",
                        method: 'GET',
                        error: function (xhr, status, error) {
                            var err = eval("(" + xhr.responseText + ")");
                            alert(err.Message);
                        },
                        success: function (result) {
                            $("#CustomerId").val(result.Id);
                            $("#Customer_Name").val(result.Name);
                            $("#findCustomer").modal('toggle');                            
                        }
                    });

                });

            $("#DepartmentId").change(function (e) {
                
                var id = $("#DepartmentId").val();
                var url1 = '@Url.Action("GetEngineers")';
                var url2 = '@Url.Action("GetProducts")';
                //var msg = '@AppViews.DepartmentChangeMsg';


                //if (!confirm(msg)) {
                //    $("#DepartmentId").val($("#DepartmentId").data('val'));
                //    return;
                //}

                $("#EngineerId").empty();

                $.ajax({
                    contentType: 'application/json',
                    method: 'GET',
                    url: url1,
                    data: { departmentId: id },
                    success: function (result) {
                        if (result != null && result.length > 0) {

                            var html = '<option selected="true" value=""></option>';
                            for (var i = 0; i < result.length; i++) {
                                var str = '<option value="' + result[i].Id + '">' + result[i].Name + '</option>';
                                html = html + str;
                            }
                            $("#EngineerId").html(html);
                        }
                    }
                });
            });
        });
</script>
}
