@model PagedList.IPagedList<SCM.ServiceRequest>
@using PagedList.Mvc
@using SCM.Models

@if (ViewBag.TotalActive != null)
{
@Html.Hidden("totalActive",(int) ViewBag.TotalActive)
}


@if (ViewBag.TotalDelayed != null)
{
    @Html.Hidden("totalDelayed", (int)ViewBag.TotalDelayed)
}




@if (ViewBag.TotalPending != null)
{
@Html.Hidden("totalPending", (int) ViewBag.TotalPending)
}
@if (ViewBag.Status != null)
{
    @Html.Hidden("status", (string)ViewBag.Status)
}

    @foreach (var item in Model)
    {
        string color = "";
        switch (item.StatusId)
        {
            case 20:
                color = "list-group-item-warning";
                break;
            case 90:
                color = "list-group-item-danger";
                break;
            case 100:
                color = "list-group-item-success";
                break;
            default:
                color = "";
                break;
        }
        <div class="list-group" style="margin-bottom: 2px;">
            <div class="list-group-item @color">
                @if (item.StatusId < 90 && item.RequestDate.AddDays(3) < DateTime.Today)
                {
                    if (SCM.Utils.PageUtils.IsArabic())
                    {
                        <div class="pull-left bg-danger">
                            <div class="col-md-4">
                                <p style="text-align:center;">
                                    <h2>@DateTime.Now.Subtract(item.RequestDate.AddDays(3)).TotalDays.ToString("0")</h2>
                                </p>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="pull-right bg-danger">
                            <div class="col-md-4">
                                <p style="text-align:center;">
                                    <h2>@DateTime.Now.Subtract(item.RequestDate.AddDays(3)).TotalDays.ToString("0")</h2>
                                </p>
                            </div>
                        </div>
                    }
                }
                <a href='@Url.Action("Edit", new { id = item.Id })'>
                    <h4 class="list-group-item-heading">@item.Topic()</h4>
                </a>
                <h5 class="text-primary">
                    <a href='@Url.Action("Details", "Customers", new { id = item.CustomerId })' data-toggle="tooltip" data-placement="right" 
                       title="@item.Customer.Address">@item.Customer.Name</a>
                    &nbsp;
                    @if (!string.IsNullOrEmpty(@item.Customer.Phone))
                    {
                        if (SCM.Utils.PageUtils.IsArabic())
                        {
                            <span class="glyphicon glyphicon-phone-alt"></span>
                            <span>@item.Customer.Phone &nbsp;</span>
                            
                        }
                        else
                        {
                            <span class="glyphicon glyphicon-phone-alt">&nbsp;@item.Customer.Phone</span>
                        }
                    }
                    @if (!string.IsNullOrEmpty(@item.Customer.Mobile))
                    {
                        if (SCM.Utils.PageUtils.IsArabic())
                        {
                            <span class="glyphicon glyphicon-phone"></span>
                            <span>@item.Customer.Mobile &nbsp;</span>

                        }
                        else
                        {
                            <span class="glyphicon glyphicon-phone">&nbsp;@item.Customer.Mobile</span>
                        }

                    }
                </h5>
                <div class="list-group-item-text">@item.Description</div>
                @if (SCM.Utils.PageUtils.IsArabic())
                {
                    <p class="center-block pull-left">
                        <span style="font-size:xx-small;" class="text-muted">@AppViews.RequestedOn @item.RequestDate.ToString("dddd dd-MM-yyyy")</span>
                    </p>
                }
                else
                {
                    <p class="center-block pull-right">
                        <span style="font-size:xx-small;" class="text-muted">@AppViews.RequestedOn @item.RequestDate.ToString("dddd dd-MM-yyyy")</span>
                    </p>
                }




                <div class="form-inline">
                    @foreach (var tag in item.Tags)
                    {
                        if (SCM.Utils.PageUtils.IsArabic())
                        {
                            <span class="form-group">
                                <span class='label @tag.Format'>
                                    @tag.Name
                                    <i class="glyphicon glyphicon-tag"></i>
                                </span>
                            </span>
                        }
                        else
                        {
                            <span class='label @tag.Format'><span class="glyphicon glyphicon-tag">&nbsp;</span>@tag.Name</span>
                            <span>&nbsp;</span>
                        }
                    }
                    @foreach (var tag in item.Customer.Tags)
                    {
                        if (SCM.Utils.PageUtils.IsArabic())
                        {
                            <span class="form-group">
                                <span class='label @tag.Format'>
                                    @tag.Name
                                    <i class="glyphicon glyphicon-tag"></i>
                                </span>
                            </span>
                        }
                        else
                        {
                            <span class='label  @tag.Format'><span class="glyphicon glyphicon-tag">&nbsp;</span>@tag.Name</span>
                            <span>&nbsp;</span>
                        }
                    }
                </div>
            </div>

        </div>
    }


    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @*@Html.PagedListPager(Model, page => Url.Action("Requests", new { page, status = ViewBag.Status }))*@
    @Html.PagedListPager(Model, page => string.Format("javascript: callRequests('{0}','{1}')", page, ViewBag.Status) )

