@model PagedList.IPagedList<SCM.ServiceRequest>
@using PagedList.Mvc
@using SCM.Models

@if (ViewBag.TotalAll != null)
{
    @Html.Hidden("totalAll", (int)ViewBag.TotalAll)
}

@if (ViewBag.TotalActive != null)
{
    @Html.Hidden("totalActive",(int) ViewBag.TotalActive)
}


@if (ViewBag.TotalDelayed != null)
{
    @Html.Hidden("totalDelayed", (int)ViewBag.TotalDelayed)
}

@if (ViewBag.TotalPending != null)
{
@Html.Hidden("totalPending", (int) ViewBag.TotalPending)
}

@if (ViewBag.TotalClosed != null)
{
    @Html.Hidden("totalClosed", (int)ViewBag.TotalClosed)
}

@if (ViewBag.Status != null)
{
    @Html.Hidden("status", (string)ViewBag.Status)
}

    @foreach (var item in Model)
    {
        string color = "";
        switch (item.StatusId)
        {
            case 10:
                color = "openBorder"; 
                break;
            case 20:
                color = "pendingBorder"; // "list-group-item-warning";
                break;
            case 90:
                color = "cancelledBorder"; // "list-group-item-danger";
                break;
            case 100:
                color = "closedBorder"; // "list-group-item-success";
                break;
            default:
                color = "";
                break;
        }
        <div class="list-group" style="margin-bottom: 2px;">
            <div class="list-group-item sideBorders @color">

                    @if (SCM.Utils.PageUtils.IsArabic())
                    {
                        <div class="pull-left bg-danger">
                            <div class="col-md-4">
                                <p style="text-align:center;">
                                    <h2>@item.DelayedFor().ToString("0")</h2>
                                </p>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="pull-right bg-danger">
                            <div class="col-md-4">
                                <p style="text-align:center;">
                                    <h2>@item.DelayedFor().ToString("0")</h2>
                                </p>
                            </div>
                        </div>
                    }

                <a title="@item.Remarks" href='@Url.Action("Edit", new { id = item.Id })'>
                    <h4 class="list-group-item-heading">
                        @switch (item.StatusId)
                        {
                            case 10:
                                <span class="glyphicon glyphicon-bookmark text-primary" title="@AppViews.StatusOpen">&nbsp;</span>
                                break;
                            case 20:
                                <span class="glyphicon glyphicon-star text-warning" title='@string.Format("{0} {1}",AppViews.StatusPending, item.PendingReasonId.HasValue? item.PendingReason.Reason : "")'>&nbsp;</span>
                                break;
                            case 90:
                                <span class="glyphicon glyphicon-ban-circle text-danger" title='@string.Format("{0} {1}",AppViews.StatusCanceled, item.CancelReasonId.HasValue? item.CancelReason.Reason : "")'>&nbsp;</span>
                                break;
                            case 100:
                                <span class="glyphicon glyphicon-folder-close text-success" title="@AppViews.StatusClosed">&nbsp;</span>
                                break;

                        }
                    @item.Topic()
                    </h4>
                </a>
                <h5 class="text-primary">
                    @if (item.Customer.IsBlackListed)
                    {
                        <a class="glyphicon glyphicon-alert" href="javascript:$('#customerName').val('@item.Customer.Name');collectFilter();"></a>
                    }
                    else
                    {
                        <a class="glyphicon glyphicon-user" href="javascript:$('#customerName').val('@item.Customer.Name');collectFilter();"></a>
                    }
                    <span>&nbsp;</span>
                    <a style="font-weight: bold;" href='@Url.Action("Details", "Customers", new { id = item.CustomerId })' data-toggle="tooltip" data-placement="right"
                        title="@item.Customer.Comments">@item.Customer.Name</a>

                    &nbsp;
                    @if (!string.IsNullOrEmpty(@item.Customer.Phone))
                    {
                        if (SCM.Utils.PageUtils.IsArabic())
                        {
                            <a class="glyphicon glyphicon-phone-alt" href="javascript:$('#phone').val('@item.Customer.Phone');collectFilter();"></a>
                            <span>@item.Customer.PhoneFormatted() &nbsp;</span>
                            
                        }
                        else
                        {
                            <a class="glyphicon glyphicon-phone-alt" href="javascript:$('#phone').val('@item.Customer.Phone');collectFilter();">&nbsp;@item.Customer.PhoneFormatted()</a>
                        }
                    }
                    @if (!string.IsNullOrEmpty(@item.Customer.Mobile))
                    {
                        if (SCM.Utils.PageUtils.IsArabic())
                        {
                            <a class="glyphicon glyphicon-phone" href="javascript:$('#phone').val('@item.Customer.Mobile');collectFilter();"></a>
                            <span>@item.Customer.MobileFormatted() &nbsp;</span>

                        }
                        else
                        {
                            <a class="glyphicon glyphicon-phone" href="javascript:$('#phone').val('@item.Customer.Mobile');collectFilter();">&nbsp;@item.Customer.MobileFormatted()</a>
                        }

                    }
                    
                </h5>
                @*<h5 style="font-weight:bolder;">@item.Customer.FullAddress()</h5>*@
                <h6 class="text-muted" >@item.Customer.FullAddress()</h6>
                <div>
                    @if (item.DepartmentId.HasValue)
                    {
                        <span class="badge">@item.Department.Name</span>
                    }
                    @if (item.ProductId != null)
                    {
                        <span class="label label-warning"><a href="javascript:$('#product').val('@item.Product.Name');collectFilter();">@item.Product.Name</a></span>
                    }
                    @if (item.EngineerId.HasValue)
                        {
                        <span class="label label-warning"><a href="javascript:$('#engineer').val('@item.Engineer.Name');collectFilter();">@item.Engineer.Name</a></span>
                    }
                </div>
               
                <p class="bg-info requestDesc">@item.Description</p>

                @if (SCM.Utils.PageUtils.IsArabic())
                {
                    <p class="center-block pull-left">
                        <span style="font-size:xx-small;" class="text-muted">@AppViews.RequestedOn @item.RequestDate.ToString("dddd dd-MM-yyyy")</span>
                    </p>
                }
                else
                {
                    <p class="center-block pull-right">
                        <span style="font-size:xx-small;" class="text-muted">@AppViews.RequestedOn @item.RequestDate.ToString("dddd dd-MM-yyyy")</span>
                    </p>
                    <br />
                }

                <div class="form-inline">
                    @foreach (var tag in item.Tags)
                        {
                            if (SCM.Utils.PageUtils.IsArabic())
                            {
                            <span class="form-group">
                                <span class='label @tag.Format'>
                                    @tag.Name
                                    <i class="glyphicon glyphicon-tag"></i>
                                </span>
                            </span>
                        }
                        else
                        {
                            <span class='label @tag.Format'><span class="glyphicon glyphicon-tag">&nbsp;</span>@tag.Name</span>
                            <span>&nbsp;</span>
                        }
                    }
                    @foreach (var tag in item.Customer.Tags)
                        {
                            if (SCM.Utils.PageUtils.IsArabic())
                            {
                            <span class="form-group">
                                <span class='label @tag.Format'>
                                    @tag.Name
                                    <i class="glyphicon glyphicon-tag"></i>
                                </span>
                            </span>
                        }
                        else
                        {
                            <span class='label  @tag.Format'><span class="glyphicon glyphicon-tag">&nbsp;</span>@tag.Name</span>
                            <span>&nbsp;</span>
                        }
                    }
                </div>
            </div>
        </div>
    }


    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @*@Html.PagedListPager(Model, page => Url.Action("Requests", new { page, status = ViewBag.Status }))*@
    @Html.PagedListPager(Model, page => string.Format("javascript: callRequests('{0}','{1}')", page, ViewBag.Status) )

