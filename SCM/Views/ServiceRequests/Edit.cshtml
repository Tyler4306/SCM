@model SCM.ServiceRequest

@{
    ViewBag.Title = @AppViews.Edit;
}

<h2>@AppViews.Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <h4>@AppViews.ServiceRequest</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.StatusId)
    @Html.HiddenFor(model => model.RequestDate)
    @Html.HiddenFor(model => model.CreatedBy)
    @Html.HiddenFor(model => model.CreatedOn)
    @Html.HiddenFor(model => model.UpdatedBy)
    @Html.HiddenFor(model => model.UpdatedOn)
    @Html.HiddenFor(model => model.IsDeleted)
    @Html.HiddenFor(model => model.StatusDate)
    @Html.HiddenFor(model => model.ClosingDate)
    @Html.HiddenFor(model => model.CenterId)
    @Html.Hidden("OldStatus", "")
    

    <div class="row">
        <div class="pull-left">
            @Html.ActionLink(AppViews.BackToList, "Index", null, htmlAttributes: new { @class = "btn btn-default" })
            &nbsp;
            <a id="btnTags" class="btn btn-primary" href="#">@AppViews.RequestTags</a>
            &nbsp;
            <input id="btnSave" type="submit" value="@AppViews.Save"  class="btn btn-primary " />
        </div>
        <div class="pull-right">
            @if (User.IsInRole("Supervisor") || User.IsInRole("Admin"))
            {
            <a id="btnPending" class="btn btn-sm btn-warning" href="#"><span class="glyphicon glyphicon-star">&nbsp;</span> @AppViews.StatusPending</a>
            <span>&nbsp;</span>
            <a id="btnCancel" class="btn btn-sm btn-danger" href="#"><span class="glyphicon glyphicon-ban-circle">&nbsp;</span> @AppViews.StatusCanceled</a>
            <span>&nbsp;</span>
            <a id="btnClose" class="btn btn-sm btn-success" href="#"><span class="glyphicon glyphicon-folder-close">&nbsp;</span> @AppViews.StatusClosed</a>
            <span>&nbsp;</span>
            }
            <a class="btn btn-sm btn-primary" href='@Url.Action("Edit", "ExServiceRequests", new { id = Model.Id})'><span class="glyphicon glyphicon-expand">&nbsp;</span> @ExSvc.ExtServiceRequest</a>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-heading">@AppViews.Customer</div>
                <div class="panel-body">

                    <div class="form-group">
                        <label for="Customer_Name" class="control-label col-md-2">@AppViews.Customer</label>
                        <div class="col-md-10">
                            @Html.HiddenFor(model => model.CustomerId)
                            <a id="Customer_Name"  href='@Url.Action("Details","Customers", new { id = Model.CustomerId })'>@Model.Customer.Name</a>
                            @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
                            @if((!string.IsNullOrEmpty(Model.Customer.Phone) || (!string.IsNullOrEmpty(Model.Customer.Mobile))))
                            {
                                <p style="margin-top: 5px;">
                                    @if(!string.IsNullOrEmpty(Model.Customer.Phone))
                                    {
                                        <span class="glyphicon glyphicon-phone-alt">&nbsp;</span>
                                        @Model.Customer.Phone
                                        <span>&nbsp;</span>
                                    }
                                    @if (!string.IsNullOrEmpty(Model.Customer.Mobile))
                                    {
                                        <span class="glyphicon glyphicon-phone">&nbsp;</span>
                                        @Model.Customer.Mobile
                                        <span>&nbsp;</span>
                                    }
                                </p>
                            }
                            <p>
                                @if (Model.Customer.CityId.HasValue)
                                {
                                    <span>@Model.Customer.City.Name &nbsp;</span>
                                }
                                @if (Model.Customer.RegionId.HasValue)
                                {
                                    <span>@Model.Customer.Region.Name &nbsp;</span>
                                }
                                <span>@Model.Customer.Address</span>
                            </p>
                        </div>
                    </div>

                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-heading">@AppViews.Product</div>
                <div class="panel-body">
                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProductId, AppViews.Product, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("ProductId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.SN, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SN, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SN, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-heading">@AppViews.Details</div>
                <div class="panel-body">
                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control", rows = "5" })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.Remarks, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="panel panel-status">
                <div id="statusName" class="panel-heading"></div>
                <div class="panel-body">
                    @if (Model.StatusId < 90 && Model.RequestDate.AddDays(3) < DateTime.Today)
                    {
                        if (SCM.Utils.PageUtils.IsArabic())
                        {
                            <div class="pull-left bg-danger">
                                <div class="col-md-4">
                                    <p style="text-align:center;">
                                        <h2>@DateTime.Now.Subtract(Model.RequestDate.AddDays(3)).TotalDays.ToString("0")</h2>
                                    </p>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="pull-right bg-danger">
                                <div class="col-md-4">
                                    <p style="text-align:center;">
                                        <h2>@DateTime.Now.Subtract(Model.RequestDate.AddDays(3)).TotalDays.ToString("0")</h2>
                                    </p>
                                </div>
                            </div>
                        }
                    }
                    <div class="text-info">@Model.Center.Name</div>
                    <div class="text-muted"><b>@AppViews.TextRequestedOn</b> @Model.RequestDate.ToShortDateString()</div>
                    <div class="text-info">@AppViews.SR_CreatedBy.ToLower() @Model.CreatedBy</div>
                    <div class="text-info">@AppViews.SR_UpdatedBy.ToLower() @Model.UpdatedBy</div>
                    <div class="text-danger"><b>@AppViews.TextStatusOn</b> @Model.StatusDate.ToShortDateString()</div>
                    @if (Model.StatusId == 90)
                    {
                        <div class="text-danger"><b>@AppViews.TextCanceledOn</b> @Model.ClosingDate.Value.ToShortDateString()</div>
                    }
                    @if (Model.StatusId == 100)
                    {
                        <div class="text-success"><b>@AppViews.TextClosedOn</b> @Model.ClosingDate.Value.ToShortDateString()</div>
                    }
                    <br />
                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DepartmentId, AppViews.Department, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownList("DepartmentId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.RQN, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.RQN, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.RQN, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ReceiptNo, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.ReceiptNo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ReceiptNo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div id="engineerEditor" class="form-group">
                            @Html.LabelFor(model => model.EngineerId, AppViews.Engineer, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownList("EngineerId", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.EngineerId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                            <div id="pendingSection" class="form-group hidden">
                                @Html.LabelFor(model => model.PendingReasonId, AppViews.PendingReason, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.DropDownList("PendingReasonId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PendingReasonId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div id="cancelSection" class="form-group hidden">
                                @Html.LabelFor(model => model.CancelReasonId, AppViews.CancelReason, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.DropDownList("CancelReasonId", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CancelReasonId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                </div>
            </div>
        </div>
    </div>
}

<div class="modal fade" id="tagsModal" tabindex="-1" role="dialog" aria-labelledby="tagsModal-label" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="tagsModal-label">@AppViews.RequestTags</h4>
            </div>
            <div class="modal-body">
                <div id="tags">

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">@AppViews.Close</button>
                <button id="btnSaveTags" type="button" class="btn btn-primary">@AppViews.Save</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(function () {

            $("#btnTags").click(function (e) {

                var url = '/ServiceRequests/ServiceRequestTags?requestId=@Model.Id';
                $("#tags").empty();

                $("#tagsModal").modal("toggle");


                $.ajax({
                    method: 'GET',
                    url: url,

                    error: function (xhr, status, error) {
                        var err = eval("(" + xhr.responseText + ")");
                        alert(err.Message);
                    },
                    success: function (result) {
                        $("#tags").html(result);
                    }
                });

            });

            $("#btnSaveTags").click(function (e) {

                var url = '/ServiceRequests/ServiceRequestTags?requestId=@Model.Id';


                var selectedTags = '';
                $(".tag").each(function (index, elem) {
                    if (elem.checked) {
                        selectedTags = selectedTags + $(this).data("id") + ',';
                    }
                });
                if (selectedTags != null) {
                    selectedTags = selectedTags.substr(0, selectedTags.length - 1);
                }
                url = url + '&tags=' + selectedTags;

                $.ajax({
                    method: 'POST',
                    url: url,

                    error: function (xhr, status, error) {
                        var err = eval("(" + xhr.responseText + ")");
                        alert(err.Message);
                    },
                    success: function (result) {
                        $("#tagsModal").modal("toggle");
                    }
                });

            });

                if ($("#StatusId").val() === "10") {
                    $(".panel-status").addClass("panel-default");
                    $("#statusName").html('@AppViews.StatusOpen');
                }
                else if ($("#StatusId").val() === "20") {
                    $(".panel-status").addClass("panel-warning");
                    $("#statusName").html('@AppViews.StatusPending');
                    $("#pendingSection").removeClass("hidden");
                }
                else if ($("#StatusId").val() === "90") {
                    $(".panel-status").addClass("panel-info");
                    $("#statusName").html('@AppViews.StatusCanceled');
                    $("#btnPending").addClass("disabled");
                    $("#btnCancel").addClass("disabled");
                    $("#btnClose").addClass("disabled");
                    $("#cancelSection").removeClass("hidden");

                    if ($("#PendingReasonId").val() == '' || $("#PendingReasonId").val() === "0")
                        $("#pendingSection").removeClass("hidden");
                }
                else if ($("#StatusId").val() === "100") {
                    $(".panel-status").addClass("panel-success");
                    $("#statusName").html('@AppViews.StatusClosed');
                    $("#btnPending").addClass("disabled");
                    $("#btnCancel").addClass("disabled");
                    $("#btnClose").addClass("disabled");

                    if ($("#PendingReasonId").val() == '' || $("#PendingReasonId").val() === "0")
                        $("#pendingSection").removeClass("hidden");

                    $("#cancelSection").removeClass("hidden");
                }

                $("#btnPending").click(function () {
                    $("#OldStatus").val($("#StatusId").val());
                    $("#StatusId").val(20);
                    $("#pendingSection").removeClass("hidden");
                    $("#btnSave").removeClass("disabled");
                    $("#btnSave").removeAttr("disabled");
                });

                $("#btnCancel").click(function () {
                    $("#OldStatus").val($("#StatusId").val());
                    $("#StatusId").val(90);
                    $("#cancelSection").removeClass("hidden");
                    $("#btnSave").removeClass("disabled");
                    $("#btnSave").removeAttr("disabled");
                });

                $("#btnClose").click(function () {
                    $("#OldStatus").val($("#StatusId").val());
                    $("#StatusId").val(100);
                    $("#btnSave").removeClass("disabled");
                    $("#btnSave").removeAttr("disabled");
                });

                $("input,select,textarea").change(function () {
                    $("#btnSave").removeClass("disabled");
                    $("#btnSave").removeAttr("disabled");
                });

                $("#DepartmentId").focusin(function () {
                    $(this).data('val', $(this).val());
                });

                $("#DepartmentId").change(function (e) {
                    
                    var id = $("#DepartmentId").val();
                    var url1 = '@Url.Action("GetEngineers")';
                    var url2 = '@Url.Action("GetProducts")';
                    var msg = '@AppViews.DepartmentChangeMsg';
                    

                    if (!confirm(msg))
                    {
                        $("#DepartmentId").val($("#DepartmentId").data('val'));
                        return;
                    }

                    $("#EngineerId").empty();
                    $("#ProductId").empty();

                    $.ajax({
                        contentType: 'application/json',
                        method: 'GET',
                        url: url1,
                        data: {departmentId: id},
                        success: function (result) {
                            if(result != null && result.length > 0)
                            {

                                var html = '<option selected="true" value=""></option>';
                                for(var i = 0; i < result.length; i++)
                                {
                                    var str = '<option value="' + result[i].Id + '">' + result[i].Name + '</option>';
                                    html = html + str;
                                }
                                $("#EngineerId").html(html);
                            }
                        }
                    });

                    $.ajax({
                        contentType: 'application/json',
                        method: 'GET',
                        url: url2,
                        data: { departmentId: id },
                        success: function (result) {
                            if (result != null && result.length > 0) {

                                var html = '<option selected="true" value=""></option>';
                                for (var i = 0; i < result.length; i++) {
                                    var str = '<option value="' + result[i].Id + '">' + result[i].Name + '</option>';
                                    html = html + str;
                                }
                                $("#ProductId").html(html);
                            }
                        }
                    });



                });



            });
    </script>

}
